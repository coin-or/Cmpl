# Intervallweise Linearisierung einer nichtlinearen Funktion

# Als Beispiel für die nichtlineare Funktion wird hier
# die Fibonacci-Folge verwendet

# Anzahl Linearisierungsintervalle
const: LinAnzahl = 1;

const:
	# Bereich für die nichtlineare Funktion
	NL_Von = 1;
	NL_Bis = 20;

	# Berechnung der Fibonacci-Folge im Bereich
	Func[1..2] = (1, 1);
	{i = 3(1)NL_Bis: Func[i] = Func[i-2] + Func[i-1]; }

	# Intervalle bestimmen
	Schrittweite = (NL_Bis - NL_Von) / LinAnzahl;
	{i = 0(1)LinAnzahl-1:
		L_Index[i] = NL_Von + (i*Schrittweite) div 1;
	}
	L_Index[LinAnzahl] = NL_Bis;

	# Anstieg der Funktion in den Intervallen
	{i = 1(1)LinAnzahl:
		L_Anstieg[i] =
		 (Func[L_Index[i]] - Func[L_Index[i-1]]) /
		 (L_Index[i] - L_Index[i-1]);
	}

# Alles weitere nur, um berechnete Werte in die generierte Matrix auszugeben
var:
	x, y, z: real;

objective:
	{i = 1(1)LinAnzahl:
		L_Index[i-1]*x + L_Index[i]*y + L_Anstieg[i]*z;
	}



 
